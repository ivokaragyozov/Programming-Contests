#include<iostream>
using namespace std;
int n, m, k, board[3005][3005], used[3005][3005];

void dfs(int i, int j, int br, int last)
{
	if(board[i][j]==0 || board[i][j]>br)board[i][j]=br;
	cout<<br<<endl;
	if(i>1 && last!=3)
	{
		dfs(i-1, j, br+1, 1);
	}
	if(j<m && last!=4)
	{
		dfs(i, j+1, br+1, 2);
	}
	if(i<n && last!=1)
	{
		dfs(i+1, j, br+1, 3);
	}	
	if(j>1 && last!=2)
	{
		dfs(i, j-1, br+1, 4);
	}
}
int main()
{
	cin>>n>>m>>k;
	for(int i=0; i<k; i++)
	{
		int a, b;
		cin>>a>>b;
		dfs(a, b, 0, 5);
		for(int j=1; j<=n; j++)
		{
			for(int p=1; p<=m; p++)
			{
				cout<<board[j][p]<<" ";
				used[j][p]=0;
			}
			cout<<endl;
		}
		cout<<endl;
	}
	int maxbr=0;
	for(int i=1; i<=n; i++)
	{
		for(int j=1; j<=m; j++)
		{
			if(maxbr<board[i][j])maxbr=board[i][j];
		}
	}
	cout<<maxbr<<endl;
	return 0;

}
